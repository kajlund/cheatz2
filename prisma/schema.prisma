// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum USER_ROLE {
  PROSPECT
  USER
  ADMIN
}

enum CACHE_TYPE {
  TRADITIONAL
  MYSTERY
  MULTI
  EARTH
  LETTERBOX
  EVENT
  CITO
  MEGA
  GIGA
  WHERIGO
  HQ
  LAB
  VIRTUAL
  WEBCAM
}

model Geocache {
  id             String     @id @default(uuid())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  gc             String     @unique
  kind           CACHE_TYPE @default(TRADITIONAL)
  name           String
  coords         String
  verified       Boolean    @default(false)
  municipalityId String
  userId         String

  municipality Municipality   @relation(fields: [municipalityId], references: [id])
  user         User           @relation(fields: [userId], references: [id])
  comments     CacheComment[]
}

model CacheComment {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  body      String
  cacheId   String
  userId    String

  cache     Geocache @relation(fields: [cacheId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model User {
  id        String         @id @default(uuid())
  createdAt DateTime       @default(now())
  username  String
  email     String         @unique
  password  String
  role      USER_ROLE      @default(PROSPECT)

  tokens    Token[]
  comments  CacheComment[]
  caches    Geocache[]
}

model Token {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  userId    String
  token     String
  revoked   Boolean  @default(false)
  belongsTo User     @relation(fields: [userId], references: [id])
}

model Municipality {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  code      Int        @unique
  name      String
  caches    Geocache[]
}
